//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CityAccess
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Web;

    public partial class Service
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Service()
        {
            this.Agreements = new HashSet<Agreement>();
            this.ServiceImages = new HashSet<ServiceImage>();
            this.Events = new HashSet<Event>();
        }

        public int ID { get; set; }

        [DisplayName("Type")]
        public Nullable<int> typeID { get; set; }

        [DisplayName("Service name")]
        [Required(ErrorMessage = "Mandatory Field.")]
        public string name { get; set; }

        [DisplayName("Descritpion")]
        [DataType(DataType.MultilineText)]
        [Required(ErrorMessage = "Mandatory Field.")]
        public string description { get; set; }

        [DisplayName("City")]
        [Required(ErrorMessage = "Mandatory Field.")]
        public Nullable<int> cityID { get; set; }


        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
        [Required(ErrorMessage = "Mandatory Field.")]
        [DataType(DataType.Time)]
        public Nullable<System.TimeSpan> Duration { get; set; }

        [DisplayName("Is public")]
        public bool isPublic { get; set; }

        [DisplayName("Operator")]
        public Nullable<int> operatorID { get; set; }

        //[Required(ErrorMessage = "Mandatory Field.")]
        public HttpPostedFileBase file { get; set; }

        public string selectedID { get; set; }



        public string fieldName1 { get; set; }
        public string fieldName2 { get; set; }
        public string fieldName3 { get; set; }
        public string fieldName4 { get; set; }
        public string fieldName5 { get; set; }
        public string fieldName6 { get; set; }
        public string fieldName7 { get; set; }
        public string fieldName8 { get; set; }
        public string fieldName9 { get; set; }
        public string fieldName10 { get; set; }
        public string fieldName11 { get; set; }
        public string fieldName12 { get; set; }
        public Nullable<bool> field1IsActive { get; set; }
        public Nullable<bool> field2IsActive { get; set; }
        public Nullable<bool> field3IsActive { get; set; }
        public Nullable<bool> field4IsActive { get; set; }
        public Nullable<bool> field5IsActive { get; set; }
        public Nullable<bool> field6IsActive { get; set; }
        public Nullable<bool> field7IsActive { get; set; }
        public Nullable<bool> field8IsActive { get; set; }
        public Nullable<bool> field9IsActive { get; set; }
        public Nullable<bool> field10IsActive { get; set; }
        public Nullable<bool> field11IsActive { get; set; }
        public Nullable<bool> field12IsActive { get; set; }
        public Nullable<bool> field1IsMandatory { get; set; }
        public Nullable<bool> field2IsMandatory { get; set; }
        public Nullable<bool> field3IsMandatory { get; set; }
        public Nullable<bool> field4IsMandatory { get; set; }
        public Nullable<bool> field5IsMandatory { get; set; }
        public Nullable<bool> field6IsMandatory { get; set; }
        public Nullable<bool> field7IsMandatory { get; set; }
        public Nullable<bool> field8IsMandatory { get; set; }
        public Nullable<bool> field9IsMandatory { get; set; }
        public Nullable<bool> field10IsMandatory { get; set; }
        public Nullable<bool> field11IsMandatory { get; set; }
        public Nullable<bool> field12IsMandatory { get; set; }
        public Nullable<int> fieldName1Type { get; set; }
        public Nullable<int> fieldName2Type { get; set; }
        public Nullable<int> fieldName3Type { get; set; }
        public Nullable<int> fieldName4Type { get; set; }
        public Nullable<int> fieldName5Type { get; set; }
        public Nullable<int> fieldName6Type { get; set; }
        public Nullable<int> fieldName7Type { get; set; }
        public Nullable<int> fieldName8Type { get; set; }
        public Nullable<int> fieldName9Type { get; set; }
        public Nullable<int> fieldName10Type { get; set; }
        public Nullable<int> fieldName11Type { get; set; }
        public Nullable<int> fieldName12Type { get; set; }


        [DisplayName("Max number of persons")]
        public Nullable<int> MaxPersonNum { get; set; }

        [DisplayName("Min number of persons")]
        public Nullable<int> MinPersonNum { get; set; }

        [DisplayName("Override price?")]
        public Nullable<bool> Override1 { get; set; }

        [DisplayName("Agent payment")]
        [Required(ErrorMessage = "Mandatory Field.")]
        public Nullable<decimal> PaymentAgent { get; set; }

        [DisplayName("Exeution control")]
        public Nullable<bool> ExecutionControl { get; set; }

        public Nullable<bool> isActive { get; set; }

        public Nullable<bool> Voucher { get; set; }

        [DisplayName("Agent Instructions")]
        [DataType(DataType.MultilineText)]
        public string agentInstructions { get; set; }

        [DisplayName("Confirmation text")]
        [DataType(DataType.MultilineText)]
        public string ConfirmationText { get; set; }

        [DisplayName("Cancellation policy")]
        [DataType(DataType.MultilineText)]
        public string cancellationPolicy { get; set; }

        [DisplayName("Commission")]
        public Nullable<decimal> commissionValue { get; set; }

        [DisplayName("Price")]
        [Required(ErrorMessage = "Mandatory Field.")]
        public Nullable<decimal> price { get; set; }

        [DisplayName("Type of price")]
        public Nullable<int> priceType { get; set; }

        [DisplayName("Commission type")]
        public Nullable<int> comissionType { get; set; }

        [DisplayName("Type of agent payment")]
        public Nullable<int> PaymentAgentType { get; set; }


        public string priceTypeLabel { get; set; }
        public string commissionTypeLabel { get; set; }
        public string PaymentAgentTypeLabel { get; set; }
        public string AvailabilityLabel { get; set; }

        [DisplayName("Availability")]
        public Nullable<int> Availability1 { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Agreement> Agreements { get; set; }
        public virtual City City { get; set; }
        public virtual Partner Partner { get; set; }
        public virtual serviceType serviceType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServiceImage> ServiceImages { get; set; }
        public virtual DynamicField DynamicField { get; set; }
        public virtual DynamicFieldAlternative DynamicFieldAlternative { get; set; }
        public virtual DynamicFieldAlternative DynamicFieldAlternative1 { get; set; }
        public virtual DynamicFieldAlternative DynamicFieldAlternative2 { get; set; }
        public virtual DynamicFieldAlternative DynamicFieldAlternative3 { get; set; }
        public virtual Service Service1 { get; set; }
        public virtual Service Service2 { get; set; }
        public virtual Service Service11 { get; set; }
        public virtual Service Service3 { get; set; }



        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Event> Events { get; set; }
    }
}
