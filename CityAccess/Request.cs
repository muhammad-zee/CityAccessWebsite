//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CityAccess
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using static WebApplication1.App_Start.CustomValidators;

    public partial class Request
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Request()
        {
            this.RequestLogs = new HashSet<RequestLog>();
        }

        public int ID { get; set; }
        public int agreementID { get; set; }
        public int bookerId { get; set; }

        [DisplayName("Price")]
        public decimal price { get; set; }

        [DisplayName("Date")]
        [DataType(DataType.Date)]
        [Required(ErrorMessage = "Mandatory Field.")]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:yyyy-MM-dd}")]
        public System.DateTime eventDate { get; set; }

        [Required(ErrorMessage = "Mandatory Field.")]
        [DisplayName("Time")]
        [DataType(DataType.Time)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
        public System.TimeSpan eventTime { get; set; }

        [DisplayName("Notes")]
        [DataType(DataType.MultilineText)]
        public string notes { get; set; }

        [DisplayName("Client Notes")]
        [DataType(DataType.MultilineText)]
        public string ClientNotes { get; set; }

        [Required(ErrorMessage = "Mandatory Field.")]
        [DisplayName("Client name")]
        public string contactName { get; set; }


        [DisplayName("Client e-mail")]
        public string contactEmail { get; set; }


        [DisplayName("Client phone")]
        [StringLength(30)]
        //[RegularExpression("^[0-9]*$", ErrorMessage = "Phone must be numeric")]
        public string contactPhone { get; set; }

        [DisplayName("Number of persons")]
        [Required(ErrorMessage = "Mandatory Field.")]
        public Nullable<int> nrPersons { get; set; }

        [DisplayName("Pick up location")]
        [RequiredIf("istransfer", true, ErrorMessage = "Mandatory Field.")]
        public string pickupLocation { get; set; }

        [DisplayName("Drop off location")]
        [RequiredIf("istransfer", true, ErrorMessage = "Mandatory Field.")]
        public string dropoffLocation { get; set; }

        [DisplayName("Flight number")]
        public string flightNr { get; set; }

        [DisplayName("Return  date")]
        [DataType(DataType.Date)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:yyyy-MM-dd}")]
        [RequiredIf("hasreturn", true, ErrorMessage = "Mandatory Field.")]
        public Nullable<System.DateTime> returnDate { get; set; }

        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
        [DisplayName("Return time")]
        [DataType(DataType.Time)]
        [RequiredIf("hasreturn", true, ErrorMessage = "Mandatory Field.")]
        public Nullable<System.TimeSpan> returnTime { get; set; }

        [DisplayName("Return flight number")]
        public string returnFlight { get; set; }

        [DisplayName("Status")]
        public string stateID { get; set; }

        [DisplayName("Reference")]
        public string reference { get; set; }

        [DisplayName("Return pick up location")]
        [RequiredIf("hasreturn", true, ErrorMessage = "Mandatory Field.")]
        public string returnPickup { get; set; }

        [DisplayName("Return drop off location")]
        [RequiredIf("hasreturn", true, ErrorMessage = "Mandatory Field.")]
        public string returnDropoff { get; set; }

        [DisplayName("Booking  date")]
        [DataType(DataType.Date)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:yyyy-MM-dd}")]
        public Nullable<System.DateTime> bookDate { get; set; }

        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
        [DisplayName("Booking time")]
        [DataType(DataType.Time)]
        public Nullable<System.TimeSpan> bookTime { get; set; }

        [DataType(DataType.Date)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:yyyy-MM-dd}")]
        [RequiredIf("extra1", true, ErrorMessage = "Mandatory Field.")]
        public Nullable<System.DateTime> extraDate1 { get; set; }

        [DataType(DataType.Date)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:yyyy-MM-dd}")]
        [RequiredIf("extra2", true, ErrorMessage = "Mandatory Field.")]
        public Nullable<System.DateTime> extraDate2 { get; set; }

        [DataType(DataType.Date)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:yyyy-MM-dd}")]
        [RequiredIf("extra3", true, ErrorMessage = "Mandatory Field.")]
        public Nullable<System.DateTime> extraDate3 { get; set; }


        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
        [DataType(DataType.Time)]
        [RequiredIf("extra4", true, ErrorMessage = "Mandatory Field.")]
        public Nullable<System.TimeSpan> extraTime1 { get; set; }

        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
        [DataType(DataType.Time)]
        [RequiredIf("extra5", true, ErrorMessage = "Mandatory Field.")]
        public Nullable<System.TimeSpan> extraTime2 { get; set; }

        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = @"{0:hh\:mm}")]
        [DataType(DataType.Time)]
        [RequiredIf("extra6", true, ErrorMessage = "Mandatory Field.")]
        public Nullable<System.TimeSpan> extraTime3 { get; set; }

        [RequiredIf("extra7", true, ErrorMessage = "Mandatory Field.")]
        public string extraText1 { get; set; }

        [RequiredIf("extra8", true, ErrorMessage = "Mandatory Field.")]
        public string extraText2 { get; set; }

        [RequiredIf("extra9", true, ErrorMessage = "Mandatory Field.")]
        public string extraText3 { get; set; }


        [DataType(DataType.MultilineText)]
        [RequiredIf("extra10", true, ErrorMessage = "Mandatory Field.")]
        public string extraMultiText1 { get; set; }

        [DataType(DataType.MultilineText)]
        [RequiredIf("extra11", true, ErrorMessage = "Mandatory Field.")]
        public string extraMultiText2 { get; set; }

        [DataType(DataType.MultilineText)]
        [RequiredIf("extra12", true, ErrorMessage = "Mandatory Field.")]
        public string extraMultiText3 { get; set; }

        [DataType(DataType.MultilineText)]
        [DisplayName("Operator notes")]
        public string OperatorNotes { get; set; }

        public Nullable<int> eventID { get; set; }

        [DisplayName("Responsible")]
        public Nullable<int> ResponsibleId { get; set; }

        public virtual Agreement Agreement { get; set; }
        public virtual User User { get; set; }
        public virtual State State { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<RequestLog> RequestLogs { get; set; }
        public virtual User User1 { get; set; }

        public string aux { get; set; }
        public bool istransfer { get; set; }
        public bool hasreturn { get; set; }
        public bool extra1 { get; set; }
        public bool extra2 { get; set; }
        public bool extra3 { get; set; }
        public bool extra4 { get; set; }
        public bool extra5 { get; set; }
        public bool extra6 { get; set; }
        public bool extra7 { get; set; }
        public bool extra8 { get; set; }
        public bool extra9 { get; set; }
        public bool extra10 { get; set; }
        public bool extra11 { get; set; }
        public bool extra12 { get; set; }
    }
}
